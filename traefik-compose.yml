services:
  traefik:
    container_name: traefik
    image: ghcr.io/traefik/traefik:${TRAEFIK_VERSION}
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    networks:
      traefik:
        ipv4_address: 172.20.0.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/acme
    ports:
      - 80:80
      - 443:443
    command:
      - --log.level=DEBUG
      - --api.dashboard=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --serversTransport.insecureSkipVerify=true
      - --entryPoints.web.address=:80
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.websecure.address=:443
      - --entrypoints.websecure.asDefault=true
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certresolver=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesResolvers.cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.cloudflare.acme.email=${ACME_EMAIL}
      - --certificatesResolvers.cloudflare.acme.storage=/acme/acme.json
      - --certificatesResolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

volumes:
  acme:

networks:
  traefik:
    external: true
# USAGE:
# Envionment variables to pass:
# CF_DNS_API_TOKEN=myCloudflareApiToken
# ACME_EMAIL=example@mail.com

# docker compose labels example:
# labels:
#   - "traefik.enable=true"
#   - "traefik.http.routers.app.rule=Host(`app.mydomain.com`)"
#   - "traefik.http.services.app.loadbalancer.server.port=8443"
#   - "traefik.http.services.app.loadbalancer.server.scheme=https"
